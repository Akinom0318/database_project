generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cart_item {
  cart_ID    Int
  product_ID Int
  quantity   Int
  prices     Decimal? @db.Decimal(8, 2)
  user       user     @relation(fields: [cart_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "cart_item_ibfk_1")
  product    product  @relation(fields: [product_ID], references: [product_ID], onDelete: Cascade, onUpdate: NoAction, map: "cart_item_ibfk_2")

  @@id([cart_ID, product_ID])
  @@index([product_ID], map: "product_ID")
}

model liking_list {
  user_ID    Int
  product_ID Int
  user       user    @relation(fields: [user_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "liking_list_ibfk_1")
  product    product @relation(fields: [product_ID], references: [product_ID], onDelete: Cascade, onUpdate: NoAction, map: "liking_list_ibfk_2")

  @@id([user_ID, product_ID])
  @@index([product_ID], map: "product_ID")
}

model order_item {
  order_ID   Int
  product_ID Int
  quantity   Int
  prices     Decimal? @db.Decimal(8, 2)
  orders     orders   @relation(fields: [order_ID], references: [order_ID], onDelete: Cascade, onUpdate: NoAction, map: "order_item_ibfk_1")
  product    product  @relation(fields: [product_ID], references: [product_ID], onDelete: Cascade, onUpdate: NoAction, map: "order_item_ibfk_2")


  @@id([order_ID, product_ID])
  @@index([product_ID], map: "product_ID")
}

model orders {
  order_ID   Int          @unique @default(autoincrement())
  user_ID    Int          @unique
  status     Int?         @default(0)
  order_item order_item[]
  user       user         @relation(fields: [user_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "orders_ibfk_1")
  paying     paying[]

  @@id([order_ID, user_ID])
  @@index([user_ID], map: "user_ID")
}

model paying {
  order_ID    Int
  payment_ID  Int
  orders      orders      @relation(fields: [order_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "paying_ibfk_1")
  paying_info paying_info @relation(fields: [payment_ID], references: [payment_ID], onDelete: Cascade, onUpdate: NoAction, map: "paying_ibfk_2")


  @@id([order_ID, payment_ID])
  @@index([payment_ID], map: "payment_ID")
}

model paying_info {
  payment_ID         Int       @id @default(autoincrement())
  bank_account       String    @db.VarChar(25)
  bank_num           String    @db.VarChar(30)
  delivering_address String    @db.VarChar(120)
  total_price        Decimal?  @default(0.00) @db.Decimal(8, 2)
  time_slot          DateTime? @db.Timestamp(0)
  paying             paying[]
}

model product {
  product_ID   Int           @id @default(autoincrement())
  product_name String        @db.VarChar(80)
  discount     Float?        @default(1)
  stock        Int?          @default(0)
  price        Decimal?      @default(0.00) @db.Decimal(8, 2)
  tags         String?       @db.VarChar(80)
  sales        Int?          @default(0)
  likes        Int?          @default(0)
  avg_score    Float?
  cart_item    cart_item[]
  liking_list  liking_list[]
  order_item   order_item[]

}

model search_history {
  user_ID Int
  keyword String @db.VarChar(80)
  user    user   @relation(fields: [user_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "search_history_ibfk_1")

  @@id([user_ID, keyword])
}

model user {
  user_ID         Int              @id @default(autoincrement())
  account         String           @unique(map: "account") @db.VarChar(50)
  password        String           @db.Char(60)
  enrollment_date DateTime?        @db.Date
  address         String           @db.VarChar(120)
  email_address   String           @db.VarChar(80)
  birthdate       DateTime         @db.Date
  age             Int?
  cart_item       cart_item[]
  liking_list     liking_list[]
  orders          orders[]
  search_history  search_history[]
  user_phone      user_phone[]

}

model user_phone {
  user_ID      Int
  phone_number String @db.VarChar(18)
  user         user   @relation(fields: [user_ID], references: [user_ID], onDelete: Cascade, onUpdate: NoAction, map: "user_phone_ibfk_1")


  @@id([user_ID, phone_number])
}
